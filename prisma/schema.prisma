datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

model Review {
    id           Int         @id @default(autoincrement())
    createdAt    DateTime    @default(now())
    title        String      @db.VarChar(255)
    text         String
    author       User        @relation(fields: [authorId], references: [id])
    authorId     Int
    product      Product     @relation(fields: [productId], references: [id])
    productId    Int
    authorsScore Int         @db.SmallInt
    imageUrl     String?     @db.VarChar(255)
    likes        Like[]
    comments     Comment[]
    tags         ReviewTag[]
}

model User {
    id      Int       @id @default(autoincrement())
    nick    String    @db.VarChar(255)
    vkId    Int?      @unique
    reviews Review[]
    ratings Rating[]
    likes   Like[]
    Comment Comment[]
}

model Category {
    name     String    @id @db.VarChar(255)
    products Product[]
}

model Rating {
    user      User    @relation(fields: [userId], references: [id])
    userId    Int
    product   Product @relation(fields: [productId], references: [id])
    productId Int
    rating    Int     @db.SmallInt

    @@id([userId, productId])
}

model Product {
    id           Int      @id @default(autoincrement())
    name         String   @db.VarChar(255)
    ratings      Rating[]
    reviews      Review[]
    category     Category @relation(fields: [categoryName], references: [name])
    categoryName String   @default("book") @db.VarChar(255)
}

model Tag {
    text    String      @id @db.VarChar(255)
    reviews ReviewTag[]
}

model ReviewTag {
    review   Review @relation(fields: [reviewId], references: [id])
    reviewId Int
    tag      Tag    @relation(fields: [tagText], references: [text])
    tagText  String @db.VarChar(255)

    @@id([reviewId, tagText])
}

model Like {
    user     User   @relation(fields: [userId], references: [id])
    userId   Int
    review   Review @relation(fields: [reviewId], references: [id])
    reviewId Int

    @@id([userId, reviewId])
}

model Comment {
    id        Int      @id @default(autoincrement())
    user      User     @relation(fields: [userId], references: [id])
    userId    Int
    text      String
    review    Review   @relation(fields: [reviewId], references: [id])
    reviewId  Int
    createdAt DateTime @default(now())
}
